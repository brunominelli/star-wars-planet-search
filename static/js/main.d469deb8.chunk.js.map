{"version":3,"sources":["styles/Filters.module.css","styles/Footer.module.css","styles/Table.module.css","images/linkedin-white-icon.png","images/github-white-icon.png","images/telegram-white-icon.png","images/email-white-icon.png","styles/Header.module.css","data/contacts.js","components/Footer.js","components/Header.js","context/AppContext.js","data/index.js","components/Filters.js","components/Table.js","services/fetchPlanets.js","context/AppProvider.js","App.js","index.js"],"names":["module","exports","contacts","url","src","LinkedIn","alt","content","GitHub","Telegram","Email","Footer","className","styles","footer","nav","map","contact","href","target","rel","key","social_link","social_icon","Header","header","AppContext","createContext","planetTableHeaders","numericValues","operators","Filters","useState","column","setColumn","comparison","setComparison","value","setValue","enabledColumns","setEnabledColumns","sort","setSort","columnSort","setColumnSort","useContext","filterByName","filterName","filterNumericValues","filterByNumericValues","sortColumns","removeFilter","removeAllFilters","useEffect","columns","option","filters","filter","includes","container","form","row","type","id","name","onChange","form_input","data-testid","e","onClick","label","htmlFor","defaultChecked","index","Table","data","table","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","fetchPlanets","a","fetch","then","response","json","ok","Promise","resolve","reject","results","AppProvider","children","setData","prevData","setPrevData","order","setOrder","setFilterByName","setFilterByNumericValues","alphabeticData","x","y","b","ordenation","getPlanets","object","toLowerCase","query","unknownResult","numericResult","result","length","forEach","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d469deb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filters_container__3zVta\",\"row\":\"Filters_row__RVeET\",\"col\":\"Filters_col__2jhoa\",\"form\":\"Filters_form__kaVr5\",\"label\":\"Filters_label__2yjju\",\"form_input\":\"Filters_form_input__3XAIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2EUkO\",\"nav\":\"Footer_nav__3PMZ1\",\"social_icon\":\"Footer_social_icon__2UqNV\",\"social_link\":\"Footer_social_link__3un4w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__3EoR0\",\"row\":\"Table_row__ToSOf\",\"col\":\"Table_col__1O1Ad\",\"table\":\"Table_table__1ozS8\"};","module.exports = __webpack_public_path__ + \"static/media/linkedin-white-icon.3b8104fc.png\";","module.exports = __webpack_public_path__ + \"static/media/github-white-icon.eee19cac.png\";","module.exports = __webpack_public_path__ + \"static/media/telegram-white-icon.80c92b9c.png\";","module.exports = __webpack_public_path__ + \"static/media/email-white-icon.857c5b6e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fnJb\"};","import LinkedIn from '../images/linkedin-white-icon.png';\nimport GitHub from '../images/github-white-icon.png';\nimport Telegram from '../images/telegram-white-icon.png';\nimport Email from '../images/email-white-icon.png';\n\nconst contacts = [\n  {\n    url: 'https://www.linkedin.com/in/obrunominelli/',\n    src: LinkedIn,\n    alt: 'Link de perfil de Bruno Minelli no LinkedIn',\n    content: 'obrunominelli',\n  },\n  {\n    url: 'https://github.com/obrunominelli',\n    src: GitHub,\n    alt: 'Link de repositório de Bruno Minelli no GitHub',\n    content: 'obrunominelli',\n  },\n  {\n    url: 'https://t.me/obrunominelli',\n    src: Telegram,\n    alt: 'Link de contato de Bruno Minelli no Telegram',\n    content: 'obrunominelli',\n  },\n  {\n    url: 'mailto:obrunominelli@gmail.com',\n    src: Email,\n    alt: 'Link de contato de Bruno Minelli via Email',\n    content: 'obrunominelli',\n  }\n];\n\nexport default contacts;\n","import React from 'react';\nimport styles from '../styles/Footer.module.css';\nimport contacts from '../data/contacts';\n\nconst Footer = () => {\n  return (\n    <footer className={ styles.footer } >\n      <nav className={ styles.nav }>\n      {contacts.map((contact) => (\n        <a\n          href={ contact.url }\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          key={ contact.alt }\n          className={ styles.social_link }\n        >\n          <img src={ contact.src } alt={ contact.alt } className={ styles.social_icon } />\n        </a>\n      ))}\n      </nav>\n      <p>Bruno Minelli | Desenvolvedor Web Frontend&copy;</p>\n      <p>Todos os direitos reservados.</p>\n    </footer>\n  );\n}\n  \n  export default Footer;","import React from 'react';\nimport styles from '../styles/Header.module.css'\n\nfunction Header() {\n  return (\n    <header className={ styles.header }>\n      <h1>{ '</star wars planet search>' }</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import { createContext } from 'react';\n\nconst AppContext = createContext();\n\nexport default AppContext;\n","const planetTableHeaders = [\n  'Name',\n  'Rotation Period',\n  'Orbital Period',\n  'Diameter',\n  'Climate',\n  'Gravity',\n  'Terrain',\n  'Surface Water',\n  'Population',\n];\n\nconst numericValues = [\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nconst operators = [\n  'maior que',\n  'menor que',\n  'igual a',\n];\n\nexport { planetTableHeaders, numericValues, operators };\n","import React, { useContext, useEffect, useState } from 'react';\nimport AppContext from '../context/AppContext';\nimport { operators, numericValues } from '../data';\nimport styles from '../styles/Filters.module.css';\n\nfunction Filters() {\n  const [column, setColumn] = useState('population');\n  const [comparison, setComparison] = useState('maior que');\n  const [value, setValue] = useState('0');\n  const [enabledColumns, setEnabledColumns] = useState([...numericValues]);\n  const [sort, setSort] = useState('ASC');\n  const [columnSort, setColumnSort] = useState('population');\n\n  const {\n    filterByName,\n    filterName,\n    filterNumericValues,\n    filterByNumericValues,\n    sortColumns,\n    removeFilter,\n    removeAllFilters,\n  } = useContext(AppContext);\n\n  useEffect(() => {\n    const columns = filterByNumericValues.map((option) => option.column);\n    const filters = numericValues\n      .filter((option) => !columns.includes(option));\n    setEnabledColumns(filters);\n  }, [filterByNumericValues]);\n\n  const handleChange = ({ target }) => {\n    filterName(target.value);\n  };\n\n  return (\n    <section className={ styles.container }>\n      <form className={ styles.form }>\n        <div className={ styles.row }>\n          <input\n            type=\"text\"\n            id=\"name-filter\"\n            name=\"name-filter\"\n            value={ filterByName.name }\n            onChange={ handleChange }\n            className={ styles.form_input }\n            data-testid=\"name-filter\"\n          />\n          <select\n            data-testid=\"column-filter\"\n            value={ column }\n            onChange={ (e) => setColumn(e.target.value) }\n            className={ styles.form_input }\n          >\n            {enabledColumns.map((option) => (\n              <option key={ option }>{option}</option>\n            ))}\n          </select>\n          <select\n            data-testid=\"comparison-filter\"\n            value={ comparison }\n            onChange={ (e) => setComparison(e.target.value) }\n            className={ styles.form_input }\n          >\n            {operators.map((option) => (\n              <option key={ option }>{option}</option>\n            ))}\n          </select>\n          <input\n            type=\"number\"\n            data-testid=\"value-filter\"\n            value={ value }\n            onChange={ (e) => setValue(e.target.value) }\n            className={ styles.form_input }\n          />\n          <button\n            type=\"button\"\n            data-testid=\"button-filter\"\n            onClick={ () => filterNumericValues(column, comparison, value) }\n            className={ styles.form_input }\n          >\n            Filter\n          </button>\n        </div>\n        <div className={ styles.row }>\n          <label className={ styles.label } htmlFor=\"column-sort-input-asc\">\n            <span>Ascending</span>\n            <input\n              type=\"radio\"\n              value=\"ASC\"\n              id=\"column-sort-input-asc\"\n              name=\"column-sort\"\n              data-testid=\"column-sort-input-asc\"\n              defaultChecked\n              onClick={ (e) => setSort(e.target.value) }\n            />\n          </label>\n          <label className={ styles.label } htmlFor=\"column-sort-input-desc\">\n            <span>Descendant</span>\n            <input\n              type=\"radio\"\n              value=\"DESC\"\n              id=\"column-sort-input-desc\"\n              name=\"column-sort\"\n              data-testid=\"column-sort-input-desc\"\n              onClick={ (e) => setSort(e.target.value) }\n            />\n          </label>\n            <span>Order</span>\n            <select\n              id=\"column-sort\"\n              data-testid=\"column-sort\"\n              onChange={ (e) => setColumnSort(e.target.value) }\n              className={ styles.form_input }\n            >\n              {numericValues.map((option) => (\n                <option key={ option }>{option}</option>\n              ))}\n            </select>\n          <button\n            type=\"button\"\n            data-testid=\"column-sort-button\"\n            onClick={ () => sortColumns(sort, columnSort) }\n            className={ styles.form_input }\n          >\n            Order\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"button-remove-filters\"\n            onClick={ () => removeAllFilters() }\n            className={ styles.form_input }\n          >\n            Remove Filters\n          </button>\n        </div>\n      </form>\n      <div>\n        {filterByNumericValues.map((filter, index) => (\n          <div key={ index } className={ styles.row } data-testid=\"filter\">\n            <p className={ styles.form_input }>\n              { `${filter.column} ${filter.comparison} ${filter.value}` }\n            </p>\n            <button\n              type=\"button\"\n              value={ index }\n              onClick={ (e) => removeFilter(+e.target.value) }\n              className={ styles.form_input }\n            >\n              X\n            </button>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}\n\nexport default Filters;\n","import React, { useContext } from 'react';\nimport AppContext from '../context/AppContext';\nimport { planetTableHeaders } from '../data';\nimport Filters from './Filters';\nimport styles from '../styles/Table.module.css';\n\nfunction Table() {\n  const { data } = useContext(AppContext);\n  return (\n    <>\n      <Filters />\n      <main className={ styles.container }>\n        <table className={ styles.table }>\n          <thead>\n            <tr>\n              {planetTableHeaders.map((header) => (\n                <th key={ header }>{header}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((planet, index) => (\n              <tr key={ `${index}-${planet.name}` }>\n                <td data-testid=\"planet-name\">{planet.name}</td>\n                <td>{planet.rotation_period}</td>\n                <td>{planet.orbital_period}</td>\n                <td>{planet.diameter}</td>\n                <td>{planet.climate}</td>\n                <td>{planet.gravity}</td>\n                <td>{planet.terrain}</td>\n                <td>{planet.surface_water}</td>\n                <td>{planet.population}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    </>\n  );\n}\n\nexport default Table;\n","const fetchPlanets = async () => {\n  const endpoint = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const data = await fetch(endpoint)\n    .then((response) => (\n      response\n        .json()\n        .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject))\n    ));\n  return data.results;\n};\n\nexport default fetchPlanets;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport AppContext from './AppContext';\nimport fetchPlanets from '../services/fetchPlanets';\n\nfunction AppProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [prevData, setPrevData] = useState([]);\n  const [order, setOrder] = useState({ sort: 'ASC', column: 'name' });\n  const [filterByName, setFilterByName] = useState({ name: '' });\n  const [\n    filterByNumericValues,\n    setFilterByNumericValues,\n  ] = useState([]);\n\n  useEffect(() => {\n    const getPlanets = async () => {\n      const results = await fetchPlanets();\n      // Referência: https://ricardo-reis.medium.com/o-m%C3%A9todo-sort-do-array-javascript-482576734e0a#:~:text=Aprenda%20como%20usar%20o%20m%C3%A9todo,de%20n%C3%BAmeros%2C%20strings%20e%20objetos.&text=O%20m%C3%A9todo%20sort()%20permite,dos%20elementos%20no%20array%20original.\n      const alphabeticData = results.sort((x, y) => {\n        const a = x.name;\n        const b = y.name;\n        let ordenation = 1;\n        if (a === b) {\n          ordenation = 0;\n        } else if (a > b) {\n          ordenation = 1;\n        } else return -ordenation;\n        return ordenation;\n      });\n      setData(alphabeticData);\n      setPrevData(alphabeticData);\n    };\n    getPlanets();\n  }, []);\n\n  const filterName = (name) => {\n    const filter = prevData\n      .filter((planet) => planet.name.toLowerCase()\n        .includes(name));\n    setData(filter);\n    setFilterByName(name);\n  };\n\n  const filterNumericValues = (column, comparison, value) => {\n    const query = { column, comparison, value };\n    const filter = data.filter((planet) => {\n      if (query.comparison === 'maior que') return planet[query.column] > +value;\n      if (query.comparison === 'menor que') return planet[query.column] < +value;\n      if (query.comparison === 'igual a') return planet[query.column] === value;\n      return planet;\n    });\n    setData(filter);\n    setFilterByNumericValues([...filterByNumericValues, query]);\n  };\n\n  const sortColumns = (sort, column) => {\n    const object = { sort, column };\n    let unknownResult = [];\n    let numericResult = [];\n    let result = [];\n\n    switch (sort) {\n    case 'ASC':\n      unknownResult = data.filter((planet) => planet[column] === 'unknown');\n      numericResult = data.filter((planet) => planet[column] !== 'unknown')\n        .sort((a, b) => +a[column] - +b[column]);\n      result = [...numericResult, ...unknownResult];\n      setData(result);\n      break;\n    case 'DESC':\n      unknownResult = data.filter((planet) => planet[column] === 'unknown');\n      numericResult = data.filter((planet) => planet[column] !== 'unknown')\n        .sort((a, b) => +b[column] - +a[column]);\n      result = [...numericResult, ...unknownResult];\n      setData(result);\n      break;\n    default:\n      break;\n    }\n    setOrder(object);\n  };\n\n  const removeFilter = (id) => {\n    const filters = filterByNumericValues\n      .filter((filter) => filter !== filterByNumericValues[id]);\n\n    if (filters.length === 0) {\n      setData(prevData);\n      setFilterByNumericValues(filters);\n    }\n\n    if (filters.length > 0) {\n      filters.forEach(({ column, comparison, value }) => {\n        const filter = prevData.filter((planet) => {\n          if (comparison === 'maior que') return planet[column] > +value;\n          if (comparison === 'menor que') return planet[column] < +value;\n          if (comparison === 'igual a') return planet[column] === value;\n          return planet;\n        });\n        setData(filter);\n      });\n      setFilterByNumericValues(filters);\n    }\n  };\n\n  const removeAllFilters = () => {\n    setFilterByNumericValues([]);\n    setData(prevData);\n  };\n\n  const object = {\n    data,\n    setData,\n    filterByName,\n    setFilterByName,\n    filterName,\n    filterByNumericValues,\n    filterNumericValues,\n    order,\n    sortColumns,\n    removeFilter,\n    removeAllFilters,\n  };\n\n  return (\n    <AppContext.Provider value={ object }>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nAppProvider.propTypes = {\n  children: propTypes.any,\n}.isRequired;\n\nexport default AppProvider;\n","import React from 'react';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Table from './components/Table';\nimport AppProvider from './context/AppProvider';\nimport './index.css';\n\nfunction App() {\n  return (\n    <AppProvider>\n      <Header />\n      <Table />\n      <Footer />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}